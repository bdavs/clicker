{"version":3,"sources":["reducers/notification.js","reducers/counter.js","reducers/index.js","configureStore.js","components/scrollers/Scrolly.js","components/scrollers/ScrollerContainer.js","components/counters/Counter.js","components/counters/CounterContainer.js","components/ClickCount.js","components/tickertape/Tickertape.js","components/Layout.js","components/notifications/Notifications.js","index.js"],"names":["initialState","totalClicks","counterData","combineReducers","notification","state","action","type","find","p","id","index","findIndex","slice","achieved","newNotification","counter","level","multiplier","clicks","cost","interval","newCounter","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","style","height","border","margin","padding","Scrolly","items","Array","from","length","fetchMoreData","setState","concat","dataLength","this","next","hasMore","loader","scrollableTarget","endMessage","textAlign","map","i","React","Component","DisplayScrolly","props","enabled","minClicks","className","ScrollerContainer","connect","Counter","clearInterval","timer","delay","Math","round","setInterval","onIncrement","prevProps","setCounterInterval","name","onLevel","onInterval","onClick","ownProps","dispatch","onDecrement","DisplayCounters","CounterContainer","addNewCounter","bind","NotificationManager","info","allCounters","forEach","undefined","BigNumber","require","config","DECIMAL_PLACES","FORMAT","prefix","decimalSeparator","groupSeparator","groupSize","secondaryGroupSize","fractionGroupSeparator","fractionGroupSize","suffix","ClickCount","bntc","ending","result","x","e","toNumber","div","displayedClicks","Tickertape","Layout","Notifications","createNotification","success","warning","error","alert","notifications","message","onTrigger","store","createStore","persistor","persistStore","configureStore","render","ReactDOM","loading","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.796124a9.chunk.js","sourcesContent":["import allNotifications from \"../components/notifications/notifications.json\";\r\nconst initialState = allNotifications;\r\n\r\nexport default function notification(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"TRIGGER\": {\r\n      const notification = state.find((p) => p.id === action.id);\r\n      const index = state.findIndex((p) => p.id === action.id);\r\n      return [\r\n        ...state.slice(0, index),\r\n        { ...notification, achieved: true },\r\n        ...state.slice(index + 1),\r\n      ];\r\n    }\r\n    case \"NEW_NOTIFICATION\": {\r\n      return [\r\n        ...state,\r\n        action.newNotification\r\n      ];\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  totalClicks: 0,\r\n  counterData: [],\r\n};\r\n\r\nexport default function counter(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"INCREMENT\": {\r\n      const counter = state.counterData.find((p) => p.id === action.id);\r\n      const index = state.counterData.findIndex(p => p.id === action.id);\r\n      return {\r\n        ...state,\r\n        totalClicks: state.totalClicks + (counter.level * counter.multiplier),\r\n        counterData: [\r\n          ...state.counterData.slice(0, index),\r\n          { ...counter, clicks: counter.clicks + (counter.level * counter.multiplier) },\r\n          ...state.counterData.slice(index + 1),\r\n        ],\r\n      };\r\n    }\r\n    case \"DECREMENT\": {\r\n      return {\r\n        ...state,\r\n        totalClicks: state.totalClicks - 1,\r\n      };\r\n    }\r\n    case \"LEVELUP\": {\r\n      const counter = state.counterData.find((p) => p.id === action.id);\r\n      const index = state.counterData.findIndex(p => p.id === action.id);\r\n      if (state.totalClicks >= counter.cost){\r\n        return {\r\n          ...state,\r\n          totalClicks: state.totalClicks - counter.cost,\r\n          counterData: [\r\n            ...state.counterData.slice(0, index),\r\n            { ...counter, level: counter.level + 1 },\r\n            ...state.counterData.slice(index + 1),\r\n          ],\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n    }\r\n    case \"INTERVAL\": {\r\n      const counter = state.counterData.find((p) => p.id === action.id);\r\n      const index = state.counterData.findIndex(p => p.id === action.id);\r\n\r\n      return {\r\n        ...state,\r\n        counterData: [\r\n          ...state.counterData.slice(0, index),\r\n          { ...counter, interval: counter.interval + 1 },\r\n          ...state.counterData.slice(index + 1),\r\n\r\n        ],\r\n      };\r\n    }\r\n    case \"NEW_COUNTER\": {\r\n      return {\r\n        ...state,\r\n        counterData: [\r\n          ...state.counterData,\r\n          action.newCounter,\r\n        ],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux'\r\nimport notification from './notification'\r\nimport counter from './counter'\r\n\r\nexport default combineReducers({\r\n  notification,\r\n  counter\r\n})","// configureStore.js\r\n\r\nimport { createStore } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\n\r\nimport rootReducer from './reducers/index'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport default () => {\r\n  let store = createStore(persistedReducer)\r\n  let persistor = persistStore(store)\r\n  return { store, persistor }\r\n}","import React from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst style = {\r\n  height: 30,\r\n  border: \"1px solid green\",\r\n  margin: 6,\r\n  padding: 8\r\n};\r\n\r\nclass Scrolly extends React.Component {\r\n  state = {\r\n    items: Array.from({ length: 20 })\r\n  };\r\n\r\n  fetchMoreData = () => {\r\n    // a fake async api call like which sends\r\n    // 20 more records in 1.5 secs\r\n\r\n    this.setState({\r\n      items: this.state.items.concat(Array.from({ length: 20 }))\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Scrolly</h1>\r\n        <hr />\r\n        <InfiniteScroll\r\n          dataLength={this.state.items.length}\r\n          next={this.fetchMoreData}\r\n          hasMore={true}\r\n          loader={<h4>Loading...</h4>}\r\n          scrollableTarget={\"scrolly\"}\r\n          // height={300}\r\n          // initialScrollY={10}\r\n          endMessage={\r\n            <p style={{ textAlign: \"center\" }}>\r\n              <b>Yay! You have seen it all</b>\r\n            </p>\r\n          }\r\n        >\r\n          {this.state.items.map((i, index) => (\r\n            <div style={style} key={index}>\r\n              div - #{index}\r\n            </div>\r\n          ))}\r\n        </InfiniteScroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scrolly;\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Scrolly from \"./Scrolly\";\r\n\r\nimport \"./scrollers.css\";\r\n\r\n\r\nfunction DisplayScrolly(props) {\r\n  const totalClicks = props.totalClicks;\r\n  if (props.enabled && totalClicks > props.minClicks) {\r\n    return (\r\n      <div className=\"item\">\r\n        <div id=\"scrolly\" className=\"scrolly\">\r\n          <Scrolly />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\nclass ScrollerContainer extends Component {\r\n  render() {\r\n    const { totalClicks } = this.props;\r\n\r\n    return (\r\n      // <div className=\"item \">\r\n      //   <div className=\"scroller-container\">\r\n          <DisplayScrolly\r\n            enabled = {false}\r\n            totalClicks={totalClicks}\r\n            minClicks={5000}\r\n          />\r\n      //   </div>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    totalClicks: state.counter.totalClicks,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(ScrollerContainer);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./counters.css\";\r\n\r\nclass Counter extends Component {\r\n\r\n  setCounterInterval(interval) {\r\n    if (interval > 0) {\r\n      clearInterval(this.timer);\r\n      this.delay = Math.round(5000 / interval);\r\n      this.timer = setInterval(() => this.props.onIncrement(this.props.id), this.delay);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { interval } = this.props;\r\n    if (prevProps.interval !== interval) {\r\n      this.setCounterInterval(interval);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { interval } = this.props;\r\n    this.setCounterInterval(interval);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n    this.timer = null;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      clicks,\r\n      name,\r\n      id,\r\n      cost,\r\n      level,\r\n      multiplier,\r\n      interval,\r\n      onIncrement,\r\n      onLevel,\r\n      onInterval,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div  className=\"counter-item\">\r\n        <div className=\"counter-name\" >\r\n          {name}:   \r\n        </div>\r\n        <div className=\"multiplier\">\r\n          Multiplier: {multiplier}\r\n        </div>\r\n        <div className=\"clicks\">\r\n          Clicked: {clicks} times\r\n        </div>\r\n        <button className=\"click-btn btn\" onClick={() => onIncrement(id)}>\r\n          CLICK HERE {level} x {multiplier} = {level * multiplier}\r\n        </button>\r\n        <button className=\"level-btn btn\" onClick={() => onLevel(id)}>\r\n          +{level } cost: {cost}\r\n        </button>\r\n        <button className=\"tick-btn btn\" onClick={() => onInterval(id)}>\r\n          Speed Up Level: {interval} ticks: {Math.round(5000 / interval)}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCounter.propTypes = {\r\n  onLevel: PropTypes.func.isRequired,\r\n  onInterval: PropTypes.func.isRequired,\r\n  onIncrement: PropTypes.func.isRequired,\r\n  onDecrement: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  // console.log(\"state\",state)\r\n  // console.log(\"ownstate\",ownProps)\r\n  return {\r\n    totalClicks: state.counter.totalClicks,\r\n    clicks: state.counter.counterData.find((p) => p.id === ownProps.id).clicks,\r\n    level: state.counter.counterData.find((p) => p.id === ownProps.id).level,\r\n    interval: state.counter.counterData.find((p) => p.id === ownProps.id).interval,\r\n    cost: state.counter.counterData.find((p) => p.id === ownProps.id).cost,\r\n    multiplier: state.counter.counterData.find((p) => p.id === ownProps.id).multiplier,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onIncrement: (id) => dispatch({ type: \"INCREMENT\", id }),\r\n    onDecrement: (id) => dispatch({ type: \"DECREMENT\", id }),\r\n    onLevel: (id) => dispatch({ type: \"LEVELUP\", id }),\r\n    onInterval: (id) => dispatch({ type: \"INTERVAL\", id }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Counter from \"./Counter\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport allCounters from \"./counters.json\";\r\nimport \"./counters.css\";\r\n\r\nfunction DisplayCounters(props) {\r\n  const { counterData } = props;\r\n  return counterData.map((counter) => (\r\n    // <div key={counter.id}>\r\n      <Counter key={counter.id} name={counter.name} id={counter.id} />\r\n    // </div>\r\n  ));\r\n}\r\n\r\nclass CounterContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addNewCounter = this.addNewCounter.bind(this);\r\n  }\r\n  addNewCounter(counter) {\r\n    const newCounter = {\r\n      id: counter.id,\r\n      name: counter.name,\r\n      cost: counter.cost,\r\n      multiplier: counter.multiplier,\r\n      clicks: 0,\r\n      level: 1,\r\n      interval: 0,\r\n    };\r\n    this.props.dispatch({ type: \"NEW_COUNTER\", newCounter });\r\n    if (counter.id !== 0) {\r\n      NotificationManager.info(\r\n        \"Unlocked \" + counter.name + \"!\",\r\n        \"New Clicker Unlocked!\",\r\n        //5000, () => {\r\n          // alert(\"callback\");\r\n        // }\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.totalClicks !== prevProps.totalClicks) {\r\n      // add any new counters to state\r\n      allCounters.forEach((counter) => {\r\n        if (this.props.totalClicks >= counter.minClicks) {\r\n          const c = this.props.counterData.find((p) => p.id === counter.id);\r\n          if (c === undefined) {\r\n            this.addNewCounter(counter);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // empty list\r\n    if (this.props.counterData.length === 0) {\r\n      this.addNewCounter(allCounters[0]);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { counterData } = this.props;\r\n    return (\r\n      <div className=\"item counter-container\">\r\n        {/* <div className=\"\"> */}\r\n          <DisplayCounters counterData={counterData} />\r\n        {/* </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    totalClicks: state.counter.totalClicks,\r\n    counterData: state.counter.counterData,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(CounterContainer);\r\n","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\";\r\n// import BigNumber from \"bignumber\"\r\nconst BigNumber = require('bignumber.js');\r\n\r\nconst fmt = {\r\n  // string to prepend\r\n  prefix: '',\r\n  // decimal separator\r\n  decimalSeparator: '.',\r\n  // grouping separator of the integer part\r\n  groupSeparator: ',',\r\n  // primary grouping size of the integer part\r\n  groupSize: 3,\r\n  // secondary grouping size of the integer part\r\n  secondaryGroupSize: 0,\r\n  // grouping separator of the fraction part\r\n  fractionGroupSeparator: ' ',\r\n  // grouping size of the fraction part\r\n  fractionGroupSize: 0,\r\n  // string to append\r\n  suffix: 'Sv'\r\n}\r\n\r\nBigNumber.config({\r\n  DECIMAL_PLACES: 2,\r\n  FORMAT: fmt\r\n});\r\n\r\nclass ClickCount extends Component {\r\n  render() {\r\n    const {totalClicks} = this.props;\r\n    const bntc = BigNumber(totalClicks);\r\n    // let myfmt = fmt;\r\n    let ending = '';\r\n    let result = 0;\r\n    const x = bntc.e;\r\n    switch (true) {\r\n      case (x < 3):\r\n          ending = 'nSv'\r\n          result = bntc.toNumber()\r\n          break;\r\n      case (x < 6):\r\n          ending = 'uSv'\r\n          result = bntc.div(1e3)\r\n          break;\r\n      case (x < 9):\r\n          ending = 'mSv'\r\n          result = bntc.div(1e6)\r\n          break;\r\n      default:\r\n          ending = 'Sv'\r\n          result = bntc.div(1e9)\r\n          break;\r\n    }\r\n    \r\n    const displayedClicks = result + ' ' + ending\r\n\r\n    // bntc.toFormat(0,0,myfmt)\r\n    \r\n    return (\r\n    <div>\r\n      \r\n      <h1>Clicks:<br/>{displayedClicks}</h1>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    totalClicks: state.counter.totalClicks,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(ClickCount);\r\n","import React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\n// import BigNumber from \"bignumber\"\n// const BigNumber = require('bignumber.js');\nimport \"./tickertape.css\"\n\n\nclass Tickertape extends Component {\n  render() {\n    const {totalClicks} = this.props;\n    // const bntc = BigNumber(totalClicks);\n    // let myfmt = fmt;\n    // let ending = '';\n    // let result = 0;\n\n    \n    // const displayedClicks = result + ' ' + ending\n\n    // bntc.toFormat(0,0,myfmt)\n    \n    return (\n    <div className=\"marquee\">\n      \n      <p>\n      this is a shitload of text like so much juck copious amountsticker this is a shitload of text like so much juck copious amountstickerthis is a shitload of text like so much juck copious amountsticker\n      </p>\n    </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    totalClicks: state.counter.totalClicks,\n  };\n}\nexport default connect(mapStateToProps)(Tickertape);\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ScrollerContainer from \"./scrollers/ScrollerContainer\";\r\nimport CounterContainer from \"./counters/CounterContainer\";\r\nimport ClickCount from \"./ClickCount\";\r\nimport Tickertape from \"./tickertape/Tickertape\"\r\n\r\nimport \"../index.css\";\r\n\r\nclass Layout extends Component {\r\n  render() {\r\n    // const { totalClicks } = this.props;\r\n    return (\r\n      <div className=\"outer-container\">\r\n        <div className=\"upper-item\">\r\n          <Tickertape />\r\n          <ClickCount />\r\n        </div>\r\n        <div className=\"container\">\r\n          <CounterContainer />\r\n          <ScrollerContainer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    totalClicks: state.counter.totalClicks,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\n\r\n// import allNotifications from \"./notifications.json\";\r\n\r\nclass Notifications extends Component {\r\n\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.totalClicks !== prevProps.totalClicks) {\r\n      // console.log(this.props)\r\n      this.props.notifications.forEach((notification) => {\r\n        if (notification.achieved === false && this.props.totalClicks >= notification.minClicks){\r\n          NotificationManager.success(notification.message, \"Achievement Unlocked!\");\r\n          // notification.achieved = true;\r\n          this.props.onTrigger(notification.id)\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  createNotification = (type) => {\r\n    return () => {\r\n      switch (type) {\r\n        case \"info\":\r\n          NotificationManager.info(\"Info message\");\r\n          break;\r\n        case \"success\":\r\n          NotificationManager.success(\"Success message\", \"Title here\");\r\n          break;\r\n        case \"warning\":\r\n          NotificationManager.warning(\r\n            \"Warning message\",\r\n            \"Close after 3000ms\",\r\n            3000\r\n          );\r\n          break;\r\n        case \"error\":\r\n          NotificationManager.error(\"Error message\", \"Click me!\", 5000, () => {\r\n            alert(\"callback\");\r\n          });\r\n          break;\r\n        default:\r\n          alert(\"unknown notification!\");\r\n      }\r\n    };\r\n  };\r\n\r\n  render() {\r\n    // const { totalClicks } = this.props;\r\n    return (\r\n      <div>\r\n        <NotificationContainer />\r\n{/* \r\n        <button className=\"btn btn-info\"\r\n          onClick={this.createNotification(\"info\")}>Info\r\n        </button>\r\n        <hr />\r\n        <button className='btn btn-success'\r\n          onClick={this.createNotification('success')}>Success\r\n        </button>\r\n        <hr/>\r\n        <button className='btn btn-warning'\r\n          onClick={this.createNotification('warning')}>Warning\r\n        </button>\r\n        <hr/>\r\n        <button className='btn btn-danger'\r\n          onClick={this.createNotification('error')}>Error\r\n        </button> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    totalClicks: state.counter.totalClicks,\r\n    notifications: state.notification,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTrigger: (id) => dispatch({ type: \"TRIGGER\", id }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n// import { createStore } from \"redux\";\nimport configureStore from \"./configureStore\"\nimport { PersistGate } from \"redux-persist/integration/react\";\n// import rootReducer from './reducers'\nimport \"./index.css\";\n\n// import counter from \"./reducers\";\nimport Layout from \"./components/Layout\";\nimport Notifications from \"./components/notifications/Notifications\";\n\nconst {store, persistor} = configureStore()\n// createStore(counter);\n\nconst render = () =>\n  ReactDOM.render(\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Layout />\n        <Notifications />\n      </PersistGate>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n\nrender();\nstore.subscribe(render);\n"],"sourceRoot":""}